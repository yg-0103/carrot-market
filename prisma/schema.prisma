// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


// foreign key 를 위해 prisma 에서 확인
// client : previewFeatures = ["referentialIntegrity"]
// db : referentialIntergrity = "prisma"  

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"] 
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id Int @id @default(autoincrement())
  name String
  phone BigInt? @unique
  email String? @unique
  avatar String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tokens Token[]
  products Product[]
  favs Fav[]
}



model Token {
  id Int @id @default(autoincrement())
  payload String @unique
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade) // Cascade: User가 삭제되면 Token도 같이 삭제
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Product {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade) // Cascade: User가 삭제되면 Token도 같이 삭제
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  name String
  image String
  price Int
  description String @db.MediumText
  favs Fav[]
}

model Fav {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade) 
  userId Int
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}